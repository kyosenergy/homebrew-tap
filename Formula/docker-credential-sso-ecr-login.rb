# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class DockerCredentialSsoEcrLogin < Formula
  desc "Automatically gets credentials for Amazon ECR on docker push/docker pull with support for AWS SSO"
  homepage ""
  version "0.1.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_darwin_amd64.tar.gz"
      sha256 "2f86aad8ae546bc7bfd5cf9778675c8f9ff14039c5ffbc16acdb3fdfbb39f191"

      def install
        bin.install "docker-credential-sso-ecr-login"

        chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

        if OS.mac?
          ohai "We use `xattr` and `codesign` commands to make the binary executable"
          ohai "and self-signed, ensuring it runs correctly on macOS."

          system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
          system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_darwin_arm64.tar.gz"
      sha256 "652beeeb15bf7966a0b76bce7a1345a3ffa97b636ecf6c7a63395482c0369570"

      def install
        bin.install "docker-credential-sso-ecr-login"

        chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

        if OS.mac?
          ohai "We use `xattr` and `codesign` commands to make the binary executable"
          ohai "and self-signed, ensuring it runs correctly on macOS."

          system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
          system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_linux_amd64.tar.gz"
        sha256 "e24a10d310b79a329929de3ee76b869972b1be0bf1721a1f3d6fa7660d14542f"

        def install
          bin.install "docker-credential-sso-ecr-login"

          chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

          if OS.mac?
            ohai "We use `xattr` and `codesign` commands to make the binary executable"
            ohai "and self-signed, ensuring it runs correctly on macOS."

            system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
            system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
          end
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_linux_arm64.tar.gz"
        sha256 "28428d60b0bf8d77729b54bb6301e01a74c10b829dd876c26fb804aac8936f3a"

        def install
          bin.install "docker-credential-sso-ecr-login"

          chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

          if OS.mac?
            ohai "We use `xattr` and `codesign` commands to make the binary executable"
            ohai "and self-signed, ensuring it runs correctly on macOS."

            system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
            system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
          end
        end
      end
    end
  end

  test do
    "docker-credential-sso-ecr-login --version"
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class DockerCredentialSsoEcrLogin < Formula
  desc "Automatically gets credentials for Amazon ECR on docker push/docker pull with support for AWS SSO"
  homepage ""
  version "0.1.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_darwin_amd64.tar.gz"
      sha256 "9e2a74dcdc9676c8ca75fa55a86df8e9358c82d435c602e1789aa4d8aff1fee3"

      def install
        bin.install "docker-credential-sso-ecr-login"

        chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

        if OS.mac?
          ohai "We use `xattr` and `codesign` commands to make the binary executable"
          ohai "and self-signed ensuring it runs correctly on macOS."

          system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
          system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_darwin_arm64.tar.gz"
      sha256 "92228900d0b926d80c5e951f7311b31a51952f61787d0fd44a77f2d24b177968"

      def install
        bin.install "docker-credential-sso-ecr-login"

        chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

        if OS.mac?
          ohai "We use `xattr` and `codesign` commands to make the binary executable"
          ohai "and self-signed ensuring it runs correctly on macOS."

          system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
          system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_linux_amd64.tar.gz"
        sha256 "9d926e64cba7ad6ebd97c51079d046647544e1aa75859030f6b3c212dae3b5f1"

        def install
          bin.install "docker-credential-sso-ecr-login"

          chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

          if OS.mac?
            ohai "We use `xattr` and `codesign` commands to make the binary executable"
            ohai "and self-signed ensuring it runs correctly on macOS."

            system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
            system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
          end
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/kyosenergy/docker-credential-sso-ecr-login/releases/download/v0.1.0/docker-credential-sso-ecr-login_linux_arm64.tar.gz"
        sha256 "9252af7b6e8684a3dbd4a4074bc49db8c9d86a383dea42b3829763f211b43698"

        def install
          bin.install "docker-credential-sso-ecr-login"

          chmod "+x", "#{bin}/docker-credential-sso-ecr-login"

          if OS.mac?
            ohai "We use `xattr` and `codesign` commands to make the binary executable"
            ohai "and self-signed ensuring it runs correctly on macOS."

            system "/usr/bin/xattr", "-cr", "#{bin}/docker-credential-sso-ecr-login"
            system "/usr/bin/codesign", "--force", "--deep", "--sign", "-", "#{bin}/docker-credential-sso-ecr-login"
          end
        end
      end
    end
  end

  test do
    docker-credential-sso-ecr-login --version"
  end
end
